# -*- coding: utf-8 -*-
"""app collab.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZYeaXHhcgNn3T0o2taQaQpcujhu6ChpU
"""

import streamlit as st
import math

# ====================================================================
# Lógica para la verificación de números primos
# ====================================================================
def es_primo(n):
    """
    Verifica si un número entero positivo 'n' es primo.

    Un número primo es un número natural mayor que 1 que tiene
    únicamente dos divisores positivos distintos: él mismo y el 1.
    """
    # Los números menores o iguales a 1 no son primos
    if n <= 1:
        return False

    # 2 es el único número primo par
    if n == 2:
        return True

    # Los números pares mayores que 2 no son primos
    if n % 2 == 0:
        return False

    # Comprobar divisibilidad por números impares desde 3 hasta la
    # raíz cuadrada del número (inclusive). Esto optimiza la verificación.
    max_divisor = int(math.sqrt(n))

    # Iteramos solo sobre números impares
    for i in range(3, max_divisor + 1, 2):
        if n % i == 0:
            return False  # Se encontró un divisor, no es primo

    return True # No se encontraron divisores, es primo

# ====================================================================
# Configuración e Interfaz de Streamlit
# ====================================================================

# Configuración básica de la página
st.set_page_config(
    page_title="Verificador de Primos",
    page_icon="✨",
    layout="centered"
)

st.markdown(
    """
    <style>
    .stApp {
        background-color: #f0f2f6;
    }
    .st-emotion-cache-1avcm0n { /* Main app container */
        padding-top: 2rem;
    }
    .result-container {
        padding: 20px;
        border-radius: 10px;
        margin-top: 20px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .prime {
        background-color: #d4edda;
        border: 1px solid #c3e6cb;
        color: #155724;
    }
    .not-prime {
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        color: #721c24;
    }
    </style>
    """,
    unsafe_allow_html=True
)

st.title("✨ Verificador Interactivo de Números Primos")
st.markdown("---")

st.subheader("Ingresa el número a evaluar")

# Widget de entrada de número (solo enteros positivos)
try:
    numero_ingresado = st.number_input(
        "Introduce un número entero positivo (mínimo 1):",
        min_value=1,
        step=1,
        format="%d"
    )

    # El botón permite al usuario decidir cuándo ejecutar la verificación
    if st.button("Verificar Número", type="primary"):
        # Aseguramos que la entrada sea tratada como un entero
        num_a_evaluar = int(numero_ingresado)

        # Ejecutar la lógica de verificación
        es_primo_resultado = es_primo(num_a_evaluar)

        # Mostrar el resultado
        if es_primo_resultado:
            # Resultado para número primo
            st.markdown(
                f"""
                <div class='result-container prime'>
                    <h2>¡SÍ es un número primo!</h2>
                    <p style='font-size: 1.2rem;'>El número <b>{num_a_evaluar}</b> es divisible únicamente por 1 y por sí mismo.</p>
                </div>
                """,
                unsafe_allow_html=True
            )
        else:
            # Resultado para número NO primo
            st.markdown(
                f"""
                <div class='result-container not-prime'>
                    <h2>¡NO es un número primo!</h2>
                    <p style='font-size: 1.2rem;'>El número <b>{num_a_evaluar}</b> tiene otros divisores además de 1 y {num_a_evaluar}.</p>
                </div>
                """,
                unsafe_allow_html=True
            )

        st.info(f"Nota: La función se ejecutó para el número {num_a_evaluar}.")

except Exception as e:
    # Manejo básico de errores si el input falla
    st.error("Por favor, introduce un número entero válido.")

st.markdown("---")
st.caption("Aplicación creada con Streamlit y la librería `math` de Python.")